model{
  
  for(Pop in 1:2){
    for(vaccine in 1:2){ ### 2== Not vaccinated, 1 ==Vaccinated
      
      probResult[Pop,vaccine,1]<-(1-SeStd[vaccine])*(1-SeDIVA[vaccine])*Prevalence[Pop]*v.efficacy/(v.efficacy+(1-v.efficacy)*(2-vaccine))+
        SpStd[vaccine]*SpDIVA[vaccine]*(1-Prevalence[Pop]) ##--
      
      probResult[Pop,vaccine,2]<-SeStd[vaccine]*(1-SeDIVA[vaccine])*Prevalence[Pop]*v.efficacy/(v.efficacy+(1-v.efficacy)*(2-vaccine))+
        (1-SpStd[vaccine])*SpDIVA[vaccine]*(1-Prevalence[Pop]*v.efficacy/(v.efficacy+(1-v.efficacy)*(2-vaccine))) ##+-
      
      probResult[Pop,vaccine,3]<-(1-SeStd[vaccine])*SeDIVA[vaccine]*Prevalence[Pop]*v.efficacy/(v.efficacy+(1-v.efficacy)*(2-vaccine))+
        SpStd[vaccine]*(1-SpDIVA[vaccine])*(1-Prevalence[Pop]*v.efficacy/(v.efficacy+(1-v.efficacy)*(2-vaccine))) ##-+
      
      probResult[Pop,vaccine,4]<-SeStd[vaccine]*SeDIVA[vaccine]*Prevalence[Pop]*v.efficacy/(v.efficacy+(1-v.efficacy)*(2-vaccine))+
        (1-SpStd[vaccine])*(1-SpDIVA[vaccine])*(1-Prevalence[Pop]*v.efficacy/(v.efficacy+(1-v.efficacy)*(2-vaccine))) ##++
      
      
      counts[Pop,vaccine,1:4]~dmulti(probResult[Pop,vaccine,1:4],nCattle[Pop,vaccine])
    }
  }
  
  
  Prevalence[1]<-max(Prev.temp)
  Prevalence[2]<-min(Prev.temp)
  
  Prev.temp[1]~dunif(0,0.2)
  Prev.temp[2]~dunif(0,0.2)
  v.efficacy~dunif(0,1)
  
  for(vaccine in 1:2){

    SeStd[vaccine]~dbeta(SeStd.gold[vaccine]+1,npos.gold[vaccine]-SeStd.gold[vaccine]+1)
    SeDIVA[vaccine]~dbeta(SeDIVA.gold[vaccine]+1,npos.gold[vaccine]-SeDIVA.gold[vaccine]+1)
    SpStd[vaccine]~dbeta(SpStd.gold[vaccine]+1,nneg.gold[vaccine]-SpStd.gold[vaccine]+1)
    SpDIVA[vaccine]~dbeta(SpDIVA.gold[vaccine]+1,nneg.gold[vaccine]-SpDIVA.gold[vaccine]+1)
  }
}